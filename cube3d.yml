
    int x, y;

    y = 0;
    while (y < game->map_h)
    {
        x = 0;
        while (x < game->map_w)
        {
            printf("%d", game->mmap[y][x]);
            x++;
        }
        y++;
        printf("\n");
    }


    // if (!check_top_bottom(board[0]))
    //     return (0);
    // if (!check_top_bottom(board[game->map_h - 1]))
    //     return (0);
    // if (!check_middle(game, board))
    //     return (0);
    

static int      check_top_bottom(char *board);
static int      check_middle(t_game *game, char **board);

static int  check_middle(t_game *game, char **board)
{
    int y;
    int len;

    y = -1;
    len = 0;
    while (board[++y])
    {
        len = ft_strlen(board[y]);
        if (board[y][0] != '1' || board[y][len - 1] != '1')
            return (0);
    }
    return (1);
}

static int  check_top_bottom(char *board)
{
    int i;

    i = -1;
    while (board[++i])
    {
        if (board[i] != '1')
            return (0);
    }
    return (1);
}


1111111111111111111111111
1000000000110000000000001
1011000001110000000000001
10010000000000000000000011
11111111111111111111111111
111111111011   100100011101
1111111111111111111111111111
10000000001100000111011111111111111111
10111111111111111110000010001
10000000000000011101010010001
10001000100000001100000010001
1001000000000000010000000001
100000N0000000001101010000001
11111111111101011111011100111
11110111111101011101111010001
1111111111111111111111111111